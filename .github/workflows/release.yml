name: Build and Push Web Images

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - 'add-staging-env'
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/opengreenhousemanager/greenhouse_web
          tags: |
            type=raw,value=${{ matrix.environment }}
            type=raw,value=${{ matrix.environment }}-${{ github.sha }}
            type=ref,event=tag,suffix=-${{ matrix.environment }}

      - name: Set environment variables for staging
        if: matrix.environment == 'staging'
        run: |
          echo "API_BASE_URL=${{ secrets.STAGING_API_BASE_URL }}" >> $GITHUB_ENV
          echo "ANGULAR_CONFIGURATION=staging" >> $GITHUB_ENV

      - name: Set environment variables for production
        if: matrix.environment == 'production'
        run: |
          echo "API_BASE_URL=${{ secrets.PROD_API_BASE_URL }}" >> $GITHUB_ENV
          echo "ANGULAR_CONFIGURATION=production" >> $GITHUB_ENV

      - name: Build and push ${{ matrix.environment }}
        uses: docker/build-push-action@v6
        with:
          context: .
          target: production
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            API_BASE_URL=${{ env.API_BASE_URL }}
            ANGULAR_CONFIGURATION=${{ env.ANGULAR_CONFIGURATION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max 