name: Build and Release Docker Images

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - 'add-staging-env'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        environment: [staging, production]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag,suffix=-${{ matrix.environment }}
            type=raw,value=latest-${{ matrix.environment }},enable={{is_default_branch}}

      - name: Set environment variables for staging
        if: matrix.environment == 'staging'
        run: |
          echo "API_BASE_URL=${{ secrets.STAGING_API_BASE_URL }}" >> $GITHUB_ENV
          echo "ANGULAR_CONFIGURATION=staging" >> $GITHUB_ENV

      - name: Set environment variables for production
        if: matrix.environment == 'production'
        run: |
          echo "API_BASE_URL=${{ secrets.PROD_API_BASE_URL }}" >> $GITHUB_ENV
          echo "ANGULAR_CONFIGURATION=production" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: latest#${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            API_BASE_URL=${{ env.API_BASE_URL }}
            ANGULAR_CONFIGURATION=${{ env.ANGULAR_CONFIGURATION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## Docker Images Released

            ### Staging Environment
            ```
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-staging
            ```

            ### Production Environment
            ```
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-production
            ```

            ## Environment Variables Required

            ### Staging
            - `STAGING_API_BASE_URL`: Base URL for staging API

            ### Production
            - `PROD_API_BASE_URL`: Base URL for production API
          draft: false
          prerelease: false 